#!/usr/bin/env groovy

def products
def versions_collection
def products_collection

pipeline {
agent { label 'master'}
    parameters 
    {
                  choice(name: 'Deployment_Type', choices:"Release\nDaily Build", description: "Select Deployment Type" )
    }
    stages 
    {
        stage("Select Product and Deployment after that") 
        {
            steps 
            {
                script 
                {
                    if("${params.Deployment_Type}" == "Release")
                    { 

                          dir('/app/JobRelease')
                          {
                               products_collection = sh (script: 'awk -F ":" \'{print $1}\' latest_release.txt', returnStdout: true).trim()
                               versions_collection = sh (script: 'awk -F ":" \'{print $2}\' latest_release.txt', returnStdout: true).trim()
                          }
                        
                        echo "${versions_collection}"
                        echo "${products_collection}"
                        
                        def lines = "${verisons_collection}".split('\n');
                        println lines
                          
                    }
                    else 
                    {
                          dir('/app/JobRelease') 
                          {
                              
                              products_collection = sh (script: 'awk -F ":" \'{print $1}\' latest_release.txt|sort |uniq', returnStdout: true).trim()
                          }
                          products = input message: 'Choose  Product!', ok: 'SET', parameters: [choice(name: 'PRODUCTS', choices: "${products_collection}", description: '')]
              
                          dir('/app/JobRelease') 
                          {
                              def abc = products
                              echo "$abc"
                  
                              sh """ cat latest_release.txt|grep $abc > product.txt """
                              version_collection = sh (script: 'awk \'{print $2}\' FS=: product.txt', returnStdout: true).trim()
                              sh """ rm -rf product.txt """
                          }
                          versions = input message: 'Choose version!', ok: 'SET', parameters: [choice(name: 'VERSION', choices: "${version_collection}", description: '')]                    
                    }                    
                }
            }
        }
    }
}
